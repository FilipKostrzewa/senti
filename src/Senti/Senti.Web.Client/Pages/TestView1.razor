@using static Senti.Web.Client.Pages.TestView1

<RadzenCard Variant="Variant.Outlined" class="rz-my-4">
    <RadzenStack Orientation="Orientation.Horizontal" Gap="0.5rem" AlignItems="AlignItems.Center">
        <div>GridLines:</div>
        <RadzenSelectBar @bind-Value="@GridLines" TextProperty="Text" ValueProperty="Value"
        Data="@(Enum.GetValues(typeof(Radzen.DataGridGridLines)).Cast<Radzen.DataGridGridLines>().Select(t => new { Text = $"{t}", Value = t }))" Size="ButtonSize.Small" />
    </RadzenStack>
</RadzenCard>

<RadzenDataGrid Data="@orderDetails" GridLines="@GridLines" AllowPaging="true" AllowSorting="true">
    <Columns>
        <RadzenDataGridColumn Property="OrderID" Title="OrderID" />
        <RadzenDataGridColumn Property="ProductID" Title="ProductID" />
        <RadzenDataGridColumn Property="@nameof(OrderDetail.UnitPrice)" Title="Unit Price">
            <Template Context="detail">
                @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", detail.UnitPrice)
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Property="@nameof(OrderDetail.Quantity)" Title="Quantity" />
        <RadzenDataGridColumn Property="@nameof(OrderDetail.Discount)" Title="Discount">
            <Template Context="detail">
                @String.Format("{0}%", detail.Discount * 100)
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {

    public class OrderDetail
    {
        public int OrderID { get; set; }
        public int ProductID { get; set; }
        public decimal UnitPrice { get; set; }
        public short Quantity { get; set; }
        public float Discount { get; set; }
    }

    Radzen.DataGridGridLines GridLines = Radzen.DataGridGridLines.Default;

    IEnumerable<OrderDetail> orderDetails;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        orderDetails = new List<OrderDetail>
        {
            new OrderDetail { OrderID = 10248, ProductID = 11, UnitPrice = 14, Quantity = 12, Discount = 0.1f },
            new OrderDetail { OrderID = 10249, ProductID = 42, UnitPrice = 9.8m, Quantity = 10, Discount = 0.2f },
            new OrderDetail { OrderID = 10250, ProductID = 14, UnitPrice = 34.8m, Quantity = 5, Discount = 0.3f },
            new OrderDetail { OrderID = 10251, ProductID = 51, UnitPrice = 7, Quantity = 12, Discount = 0.4f },
            new OrderDetail { OrderID = 10252, ProductID = 22, UnitPrice = 12, Quantity = 10, Discount = 0.5f },
        };
    }

}
